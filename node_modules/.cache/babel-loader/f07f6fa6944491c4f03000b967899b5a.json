{"ast":null,"code":"import _slicedToArray from \"/home/estebanzacarias/mi-github/bebidas_react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/estebanzacarias/mi-github/bebidas_react/src/context/RecetasContext.js\";\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nexport const RecetasContext = createContext();\n\nconst RecetasProvider = props => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        recetas = _useState2[0],\n        guardarRecetas = _useState2[1];\n\n  const _useState3 = useState({\n    nombre: '',\n    categoria: ''\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        busqueda = _useState4[0],\n        buscarRecetas = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        consultar = _useState6[0],\n        guardarConsultar = _useState6[1];\n\n  const nombre = busqueda.nombre,\n        categoria = busqueda.categoria;\n  useEffect(() => {\n    if (consultar) {\n      const obtenerRecetas = async () => {\n        const url = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${nombre}&c=${categoria}`;\n        const resultado = await axios.get(url); // console.log(resultado.data.drinks);\n\n        guardarRecetas(resultado.data.drinks);\n      };\n\n      obtenerRecetas();\n    }\n  }, [busqueda]);\n  return React.createElement(RecetasContext.Provider, {\n    value: {\n      recetas,\n      buscarRecetas,\n      guardarConsultar\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default RecetasProvider;","map":{"version":3,"sources":["/home/estebanzacarias/mi-github/bebidas_react/src/context/RecetasContext.js"],"names":["React","createContext","useState","useEffect","axios","RecetasContext","RecetasProvider","props","recetas","guardarRecetas","nombre","categoria","busqueda","buscarRecetas","consultar","guardarConsultar","obtenerRecetas","url","resultado","get","data","drinks","children"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,OAAO,MAAMC,cAAc,GAAGJ,aAAa,EAApC;;AAEP,MAAMK,eAAe,GAAIC,KAAD,IAAW;AAAA,oBAEGL,QAAQ,CAAC,EAAD,CAFX;AAAA;AAAA,QAExBM,OAFwB;AAAA,QAEfC,cAFe;;AAAA,qBAGGP,QAAQ,CAAC;AACvCQ,IAAAA,MAAM,EAAE,EAD+B;AAEvCC,IAAAA,SAAS,EAAE;AAF4B,GAAD,CAHX;AAAA;AAAA,QAGxBC,QAHwB;AAAA,QAGdC,aAHc;;AAAA,qBAOQX,QAAQ,CAAC,KAAD,CAPhB;AAAA;AAAA,QAOvBY,SAPuB;AAAA,QAOZC,gBAPY;;AAAA,QASvBL,MATuB,GASFE,QATE,CASvBF,MATuB;AAAA,QASfC,SATe,GASFC,QATE,CASfD,SATe;AAW/BR,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGW,SAAH,EAAc;AACV,YAAME,cAAc,GAAG,YAAY;AAC/B,cAAMC,GAAG,GAAI,4DAA2DP,MAAO,MAAKC,SAAU,EAA9F;AAEA,cAAMO,SAAS,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAUF,GAAV,CAAxB,CAH+B,CAK/B;;AACAR,QAAAA,cAAc,CAACS,SAAS,CAACE,IAAV,CAAeC,MAAhB,CAAd;AACH,OAPD;;AASAL,MAAAA,cAAc;AACjB;AAEJ,GAdQ,EAcN,CAACJ,QAAD,CAdM,CAAT;AAgBA,SACI,oBAAC,cAAD,CAAgB,QAAhB;AACI,IAAA,KAAK,EAAE;AACHJ,MAAAA,OADG;AAEHK,MAAAA,aAFG;AAGHE,MAAAA;AAHG,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOKR,KAAK,CAACe,QAPX,CADJ;AAWH,CAtCD;;AAwCA,eAAehB,eAAf","sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\n\nexport const RecetasContext = createContext();\n\nconst RecetasProvider = (props) => {\n\n    const [recetas, guardarRecetas] = useState([]);\n    const [busqueda, buscarRecetas] = useState({\n        nombre: '',\n        categoria: ''\n    });\n    const [ consultar, guardarConsultar] = useState(false);\n\n    const { nombre, categoria} = busqueda;\n\n    useEffect(() => {\n        if(consultar) {\n            const obtenerRecetas = async () => {\n                const url = `https://www.thecocktaildb.com/api/json/v1/1/filter.php?i=${nombre}&c=${categoria}`;\n\n                const resultado = await axios.get(url);\n\n                // console.log(resultado.data.drinks);\n                guardarRecetas(resultado.data.drinks);\n            }\n\n            obtenerRecetas();\n        }\n\n    }, [busqueda]);\n\n    return ( \n        <RecetasContext.Provider\n            value={{\n                recetas,\n                buscarRecetas, \n                guardarConsultar\n            }}\n        >\n            {props.children}\n        </RecetasContext.Provider>\n     );\n}\n \nexport default RecetasProvider;"]},"metadata":{},"sourceType":"module"}